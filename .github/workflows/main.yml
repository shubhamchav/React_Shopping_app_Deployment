name: CI + CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        run: npm install -g pnpm  # Ensure pnpm is installed

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm run build  # Generates `dist/` folder

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist  # Upload the `dist` folder for later use

  DeployStaging:
    name: Deploy to Staging (EC2)
    if: github.event.ref == 'refs/heads/master'
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: 'http://${{ secrets.EC2_HOST_STAGING }}/'

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_STAGING }} >> ~/.ssh/known_hosts

      - name: Deploy to Staging Server
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} "rm -rf /var/www/staging/*"
          scp -r dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }}:/var/www/staging/
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_STAGING }} "sudo systemctl restart nginx"

  DeployProd:
    name: Deploy to Production (EC2)
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'http://${{ secrets.EC2_HOST_PROD }}/'

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: dist

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST_PROD }} >> ~/.ssh/known_hosts

      - name: Deploy to Production Server
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} "rm -rf /var/www/production/*"
          scp -r dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }}:/var/www/production/
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_PROD }} "sudo systemctl restart nginx"
